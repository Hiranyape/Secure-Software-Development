services:
  nosql-db:
    image: mvertes/alpine-mongo
    container_name: nosql-db
    volumes:
      - ./db/:/data/db

  rabbitmq:
    image: rabbitmq:alpine
    container_name: rabbitmq

  products:
    build:
      dockerfile: Dockerfile
      context: ./products
    container_name: products
    ports:
      - "8002:8002"
    restart: always
    depends_on:
      - "nosql-db"
      - "rabbitmq"
    volumes:
      - .:/app
      - /app/products/node_modules
    environment:
      - APP_SECRET=MySecretKey
      - MONGODB_URI=mongodb+srv://hiranya:hiranya@cluster0.deewp.mongodb.net/products?retryWrites=true&w=majority&appName=Cluster0&ssl=true
      - MSG_QUEUE_URL=amqps://hmymaonx:eQw67COvm6yBLbc0-ls4vHwjHfiYKEdZ@lionfish.rmq.cloudamqp.com/hmymaonx
      - EXCHANGE_NAME=ONLINE_STORE
      - PORT=8002

  shopping:
    build:
      dockerfile: Dockerfile
      context: ./shopping
    container_name: shopping
    ports:
      - "8003:8003"
    restart: always
    depends_on:
      - "nosql-db"
      - "rabbitmq"
    volumes:
      - .:/app
      - /app/shopping/node_modules
    environment:
      - APP_SECRET=MySecretKey
      - MONGODB_URI=mongodb+srv://hiranya:hiranya@cluster0.deewp.mongodb.net/shopping?retryWrites=true&w=majority&appName=Cluster0&ssl=true
      - MSG_QUEUE_URL=amqps://hmymaonx:eQw67COvm6yBLbc0-ls4vHwjHfiYKEdZ@lionfish.rmq.cloudamqp.com/hmymaonx
      - EXCHANGE_NAME=ONLINE_STORE
      - PORT=8003
      
  customer:
    build:
      dockerfile: Dockerfile
      context: ./customer
    container_name: customer
    ports:
      - "8001:8001"
    restart: always
    depends_on:
      - "nosql-db"
      - "rabbitmq"
    volumes:
      - .:/app/
      - /app/customer/node_modules
    environment:
      - APP_SECRET=MySecretKey
      - MONGODB_URI=mongodb+srv://hiranya:hiranya@cluster0.deewp.mongodb.net/customer?retryWrites=true&w=majority&appName=Cluster0&ssl=true
      - MSG_QUEUE_URL=amqps://hmymaonx:eQw67COvm6yBLbc0-ls4vHwjHfiYKEdZ@lionfish.rmq.cloudamqp.com/hmymaonx
      - EXCHANGE_NAME=ONLINE_STORE
      - PORT=8001

  frontend:
    build:
      dockerfile: Dockerfile
      context: ./shopping_app_frontend
    container_name: frontend
    ports:
      - "3000:3000"
    restart: always
    volumes:
      - .:/app/
      - /app/shopping_app_frontend/node_modules

  nginx-proxy:
    build:
      dockerfile: Dockerfile
      context: ./proxy
    depends_on:
      - products
      - shopping
      - customer
      - frontend
    ports:
      - 80:80
